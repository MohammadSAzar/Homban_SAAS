# Generated by Django 5.1.7 on 2025-03-24 16:46

import dashboard.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='City')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone_number', models.CharField(max_length=11, unique=True, verbose_name='Phone Number')),
                ('budget_announced', models.PositiveBigIntegerField(verbose_name='Announced Budget')),
                ('budget_max', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Max Budget')),
                ('budget_status', models.CharField(choices=[('CS', 'نقد'), ('UC', 'غیر نقد')], default='1', max_length=15, verbose_name='Max Age')),
                ('room_min', models.CharField(choices=[('0', 'بدون اتاق'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', 'بیش از 5')], max_length=15, verbose_name='Min Rooms')),
                ('room_max', models.CharField(choices=[('0', 'بدون اتاق'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', 'بیش از 5')], max_length=15, verbose_name='Max Rooms')),
                ('area_min', models.PositiveIntegerField(default='1', verbose_name='Min Area')),
                ('area_max', models.PositiveIntegerField(default='1', verbose_name='Max Area')),
                ('age_min', models.CharField(choices=[('-1', 'کلید نخورده'), ('0', 'نوساز'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بیش از 30')], default='1', max_length=15, verbose_name='Min Age')),
                ('age_max', models.CharField(choices=[('-1', 'کلید نخورده'), ('0', 'نوساز'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بیش از 30')], default='1', max_length=15, verbose_name='Max Age')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Description')),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Code')),
                ('datetime_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date and Time of Creation')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('phone_number', models.CharField(max_length=11, unique=True, verbose_name='Phone Number')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Province')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10, verbose_name='Type of Trade')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('result', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Result')),
                ('date', models.CharField(choices=dashboard.models.next_seven_days_shamsi, max_length=200, verbose_name='Date of Visit')),
                ('time', models.CharField(choices=[('mg', 'Morning'), ('nn', 'Noon'), ('eg', 'Evening'), ('nt', 'Night')], max_length=200, verbose_name='Time of Visit')),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Code')),
                ('status', models.CharField(choices=[('sub', 'Submitted'), ('can', 'Canceled'), ('dne', 'Done')], default='sub', max_length=10, verbose_name='Status')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time of Creation')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.CreateModel(
            name='CustomUserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('title', models.CharField(blank=True, choices=[('fp', 'File Person'), ('cp', 'Customer Person'), ('cr', 'Coordinator'), ('bs', 'Boss')], max_length=10, null=True, verbose_name='Title')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='District Title')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts', to='dashboard.city')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='dashboard.province'),
        ),
        migrations.CreateModel(
            name='SubDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Sub-District Title')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_districts', to='dashboard.district')),
            ],
        ),
        migrations.CreateModel(
            name='SaleFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Address')),
                ('price_announced', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Announced Price')),
                ('price_min', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Min Price')),
                ('room', models.CharField(choices=[('0', 'بدون اتاق'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', 'بیش از 5')], max_length=15, verbose_name='Number of Rooms')),
                ('area', models.PositiveIntegerField(verbose_name='Area')),
                ('age', models.CharField(choices=[('-1', 'کلید نخورده'), ('0', 'نوساز'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بیش از 30')], default='1', max_length=15, verbose_name='Age of Apartment')),
                ('document', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Document')),
                ('level', models.CharField(choices=[('-1', 'زیر همکف'), ('0', 'همکف'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بالاتر از 30')], max_length=15, verbose_name='Level')),
                ('parking', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Parking')),
                ('elevator', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Elevator')),
                ('warehouse', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Warehouse')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 4')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 5')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 6')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 7')),
                ('image8', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 8')),
                ('image9', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 9')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', verbose_name='Video')),
                ('direction', models.CharField(blank=True, choices=[('nth', 'North'), ('sth', 'South'), ('est', 'East'), ('wst', 'West')], max_length=15, null=True, verbose_name='Direction')),
                ('file_levels', models.CharField(blank=True, choices=[('-1', 'زیر همکف'), ('0', 'همکف'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بالاتر از 30')], max_length=15, null=True, verbose_name='Levels Number')),
                ('apartments_per_level', models.CharField(blank=True, choices=[('one', 'تک واحدی'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('more-10', 'بیش از 10')], max_length=15, null=True, verbose_name='Apartments per Level')),
                ('restoration', models.CharField(blank=True, choices=[('done', 'Done'), ('dont', 'not Done')], max_length=15, null=True, verbose_name='Restoration')),
                ('bench_stove', models.CharField(blank=True, choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, null=True, verbose_name='Bench Stove')),
                ('balcony', models.CharField(blank=True, choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, null=True, verbose_name='Balcony')),
                ('toilet', models.CharField(blank=True, choices=[('IR', 'ایرانی'), ('FG', 'فرنگی'), ('BT', 'هر دو')], max_length=15, null=True, verbose_name='Toilet')),
                ('hot_water', models.CharField(blank=True, choices=[('HW', 'آبگرم\u200cکن'), ('MH', 'موتورخانه'), ('PK', 'پکیج'), ('OT', 'سایر')], max_length=15, null=True, verbose_name='Hot Water System')),
                ('cooling', models.CharField(blank=True, max_length=15, null=True, verbose_name='Cooling System')),
                ('heating', models.CharField(blank=True, max_length=15, null=True, verbose_name='Heating System')),
                ('floor', models.CharField(blank=True, max_length=15, null=True, verbose_name='Floor Type')),
                ('title', models.CharField(max_length=230, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('source', models.CharField(blank=True, choices=[('DV', 'دیوار'), ('KS', 'کاشانو'), ('SK', 'اسکان'), ('OT', 'سایر'), ('PN', 'شخص')], max_length=15, null=True, verbose_name='Source')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=255, null=True, unique=True)),
                ('unique_url_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Code')),
                ('status', models.CharField(choices=[('acc', 'Accepted'), ('can', 'Canceled'), ('pen', 'Pending')], default='pen', max_length=10, verbose_name='Status')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_expired', models.DateTimeField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_files', to='dashboard.city', verbose_name='City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_files', to='dashboard.district', verbose_name='District')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_files', to='dashboard.person', verbose_name='Person')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_files', to='dashboard.province', verbose_name='Province')),
                ('sub_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sale_files', to='dashboard.subdistrict', verbose_name='Sub-District')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.CreateModel(
            name='RentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Address')),
                ('deposit_announced', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Announced Deposit')),
                ('deposit_min', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Min Deposit')),
                ('rent_announced', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Announced Rent')),
                ('rent_min', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Min Rent')),
                ('convertable', models.CharField(choices=[('is', 'Is'), ('isnt', 'Is not')], max_length=15, verbose_name='Convertable')),
                ('room', models.CharField(choices=[('0', 'بدون اتاق'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', 'بیش از 5')], max_length=15, verbose_name='Number of Rooms')),
                ('area', models.PositiveIntegerField(verbose_name='Area')),
                ('age', models.CharField(choices=[('-1', 'کلید نخورده'), ('0', 'نوساز'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بیش از 30')], default='1', max_length=15, verbose_name='Age of Apartment')),
                ('document', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Document')),
                ('level', models.CharField(choices=[('-1', 'زیر همکف'), ('0', 'همکف'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بالاتر از 30')], max_length=15, verbose_name='Level')),
                ('parking', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Parking')),
                ('elevator', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Elevator')),
                ('warehouse', models.CharField(choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, verbose_name='Warehouse')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 1')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 2')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 3')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 4')),
                ('image5', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 5')),
                ('image6', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 6')),
                ('image7', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 7')),
                ('image8', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 8')),
                ('image9', models.ImageField(blank=True, null=True, upload_to='files/images/', verbose_name='Image 9')),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', verbose_name='Video')),
                ('direction', models.CharField(blank=True, choices=[('nth', 'North'), ('sth', 'South'), ('est', 'East'), ('wst', 'West')], max_length=15, null=True, verbose_name='Direction')),
                ('file_levels', models.CharField(blank=True, choices=[('-1', 'زیر همکف'), ('0', 'همکف'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25'), ('26', '26'), ('27', '27'), ('28', '28'), ('29', '29'), ('30', '30'), ('31', 'بالاتر از 30')], max_length=15, null=True, verbose_name='Levels Number')),
                ('apartments_per_level', models.CharField(blank=True, choices=[('one', 'تک واحدی'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('more-10', 'بیش از 10')], max_length=15, null=True, verbose_name='Apartments per Level')),
                ('restoration', models.CharField(blank=True, choices=[('done', 'Done'), ('dont', 'not Done')], max_length=15, null=True, verbose_name='Restoration')),
                ('bench_stove', models.CharField(blank=True, choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, null=True, verbose_name='Bench Stove')),
                ('balcony', models.CharField(blank=True, choices=[('has', 'Has'), ('hasnt', 'Has not')], max_length=15, null=True, verbose_name='Balcony')),
                ('toilet', models.CharField(blank=True, choices=[('IR', 'ایرانی'), ('FG', 'فرنگی'), ('BT', 'هر دو')], max_length=15, null=True, verbose_name='Toilet')),
                ('hot_water', models.CharField(blank=True, choices=[('HW', 'آبگرم\u200cکن'), ('MH', 'موتورخانه'), ('PK', 'پکیج'), ('OT', 'سایر')], max_length=15, null=True, verbose_name='Hot Water System')),
                ('cooling', models.CharField(blank=True, max_length=15, null=True, verbose_name='Cooling System')),
                ('heating', models.CharField(blank=True, max_length=15, null=True, verbose_name='Heating System')),
                ('floor', models.CharField(blank=True, max_length=15, null=True, verbose_name='Floor Type')),
                ('title', models.CharField(max_length=230, verbose_name='Title')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('source', models.CharField(blank=True, choices=[('DV', 'دیوار'), ('KS', 'کاشانو'), ('SK', 'اسکان'), ('OT', 'سایر'), ('PN', 'شخص')], max_length=15, null=True, verbose_name='Source')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, max_length=255, null=True, unique=True)),
                ('unique_url_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Code')),
                ('status', models.CharField(choices=[('acc', 'Accepted'), ('can', 'Canceled'), ('pen', 'Pending')], default='pen', max_length=10, verbose_name='Status')),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_expired', models.DateTimeField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rent_files', to='dashboard.city', verbose_name='City')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rent_files', to='dashboard.district', verbose_name='District')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rent_files', to='dashboard.person', verbose_name='Person')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rent_files', to='dashboard.province', verbose_name='Province')),
                ('sub_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rent_files', to='dashboard.subdistrict', verbose_name='Sub-District')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('deadline', models.CharField(choices=dashboard.models.next_month_shamsi, max_length=200, verbose_name='Deadline')),
                ('type', models.CharField(choices=[('CS', 'نقد'), ('UC', 'غیر نقد')], max_length=10, verbose_name='Type of Trade')),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('result', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Result')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time of Creation')),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Agent')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='dashboard.customer', verbose_name='Customer')),
                ('rent_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='dashboard.rentfile', verbose_name='Rent File')),
                ('sale_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='dashboard.salefile', verbose_name='Sale File')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10, verbose_name='Type of Trade')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('date', models.CharField(choices=dashboard.models.last_month_shamsi, max_length=200, verbose_name='Date of Trade')),
                ('price', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Price')),
                ('deposit', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Deposit')),
                ('rent', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Rent')),
                ('owner', models.CharField(max_length=100, verbose_name='Owner (Seller / Lessor)')),
                ('owner_national_code', models.CharField(max_length=10, verbose_name='Owner (Seller / Lessor) National Code')),
                ('customer', models.CharField(max_length=100, verbose_name='Customer (Buyer / Tenant)')),
                ('customer_national_code', models.CharField(max_length=10, verbose_name='Customer (Buyer / Tenant) National Code')),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Code')),
                ('followup_code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Followup Code')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time of Creation')),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trades', to='dashboard.session', verbose_name='Related Session')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10, verbose_name='Type of Trade')),
                ('description', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Description')),
                ('result', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Result')),
                ('date', models.CharField(choices=dashboard.models.next_seven_days_shamsi, max_length=200, verbose_name='Date of Visit')),
                ('time', models.CharField(choices=[('mg', 'Morning'), ('nn', 'Noon'), ('eg', 'Evening'), ('nt', 'Night')], max_length=200, verbose_name='Time of Visit')),
                ('code', models.CharField(blank=True, max_length=6, null=True, unique=True, verbose_name='Code')),
                ('status', models.CharField(choices=[('sub', 'Submitted'), ('can', 'Canceled'), ('dne', 'Done')], default='sub', max_length=10, verbose_name='Status')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Date and Time of Creation')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visits', to='dashboard.customer', verbose_name='Customer')),
                ('rent_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visits', to='dashboard.rentfile', verbose_name='Rent File')),
                ('sale_file', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visits', to='dashboard.salefile', verbose_name='Sale File')),
            ],
            options={
                'ordering': ('-datetime_created',),
            },
        ),
        migrations.AddField(
            model_name='session',
            name='visit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions', to='dashboard.visit', verbose_name='Related Visit'),
        ),
    ]
